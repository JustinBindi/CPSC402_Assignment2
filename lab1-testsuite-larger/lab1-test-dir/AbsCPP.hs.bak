-- Haskell data types for the abstract syntax.
-- Generated by the BNF converter.

module AbsCPP where

newtype Id = Id String
  deriving (Eq, Ord, Show, Read)

data Program = PDefs [Def]
  deriving (Eq, Ord, Show, Read)

data Def
    = DFunc Type Id [Arg] [Stm]
    | DFInline Type Id [Arg] [Stm]
    | DTInline Type Id [Type]
    | DDecl Decl
    | DUsing QConst
    | DTemp Type Id [Type]
    | DTypDef Type Id
    | DMain Type [Arg] [Stm]
    | DInit Init
    | DStruct Id [Decl]
  deriving (Eq, Ord, Show, Read)

data Arg = ADecl Type Id
  deriving (Eq, Ord, Show, Read)

data Stm
    = SExp Exp
    | SDecl Decl
    | SInit Init
    | SReturn Exp
    | SReturnVoid
    | SWhile Exp Stm
    | SBlock [Stm]
    | SIf Exp Stm
    | SIfElse Exp Stm Stm
    | SMethod Type Id [Arg] Stm
    | STypeDef Type
    | SStruct Id [Decl]
    | SDoWhi Stm Exp
    | SFor Stm Exp Exp Stm
  deriving (Eq, Ord, Show, Read)

data Decl = DDef Type [Id]
  deriving (Eq, Ord, Show, Read)

data Init = IDef Type Id Exp
  deriving (Eq, Ord, Show, Read)

data Type
    = TypInt
    | TypBool
    | TypVoid
    | TypDoub
    | TypQC QConst
    | TCons Type
    | TypRef Type
  deriving (Eq, Ord, Show, Read)

data QConst = QDef [Elmt]
  deriving (Eq, Ord, Show, Read)

data Elmt = NElmt Id | NElntt Id [Type]
  deriving (Eq, Ord, Show, Read)

data Exp
    = EThrow Exp
    | ECondit Exp Exp Exp
    | EPlusEq Exp Exp
    | EMinEq Exp Exp
    | EAss Exp Exp
    | EOr Exp Exp
    | EAnd Exp Exp
    | ENEq Exp Exp
    | EEq Exp Exp
    | EGEq Exp Exp
    | ELEq Exp Exp
    | EGt Exp Exp
    | ELt Exp Exp
    | ERShift Exp Exp
    | ELShift Exp [Exp]
    | EMinus Exp Exp
    | EPlus Exp Exp
    | EMod Exp Exp
    | EDiv Exp Exp
    | ETimes Exp Exp
    | ENegBool Exp
    | EDecr Exp
    | EIncr Exp
    | EPointer Exp
    | EPostDecr Exp
    | EPostIncr Exp
    | EAssPointer Exp Exp
    | ERefCall Exp Exp
    | EArray Exp Exp
    | ECall Exp [Exp]
    | EQConst QConst
    | ETrue
    | EFalse
    | EString [String]
    | EChar Char
    | EInt Integer
    | EDouble Double
    | ETyped Exp Type
  deriving (Eq, Ord, Show, Read)

