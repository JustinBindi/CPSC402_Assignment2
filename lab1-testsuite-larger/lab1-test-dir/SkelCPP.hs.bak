module SkelCPP where

-- Haskell module generated by the BNF converter

import AbsCPP
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transId :: Id -> Result
transId x = case x of
  Id string -> failure x
transProgram :: Program -> Result
transProgram x = case x of
  PDefs defs -> failure x
transDef :: Def -> Result
transDef x = case x of
  DFunc type_ id args stms -> failure x
  DFInline type_ id args stms -> failure x
  DTInline type_ id types -> failure x
  DDecl decl -> failure x
  DUsing qconst -> failure x
  DTemp type_ id types -> failure x
  DTypDef type_ id -> failure x
  DMain type_ args stms -> failure x
  DInit init -> failure x
  DStruct id decls -> failure x
transArg :: Arg -> Result
transArg x = case x of
  ADecl type_ id -> failure x
transStm :: Stm -> Result
transStm x = case x of
  SExp exp -> failure x
  SDecl decl -> failure x
  SInit init -> failure x
  SReturn exp -> failure x
  SReturnVoid -> failure x
  SWhile exp stm -> failure x
  SBlock stms -> failure x
  SIf exp stm -> failure x
  SIfElse exp stm1 stm2 -> failure x
  SMethod type_ id args stm -> failure x
  STypeDef type_ -> failure x
  SStruct id decls -> failure x
  SDoWhi stm exp -> failure x
  SFor stm1 exp1 exp2 stm2 -> failure x
transDecl :: Decl -> Result
transDecl x = case x of
  DDef type_ ids -> failure x
transInit :: Init -> Result
transInit x = case x of
  IDef type_ id exp -> failure x
transType :: Type -> Result
transType x = case x of
  TypInt -> failure x
  TypBool -> failure x
  TypVoid -> failure x
  TypDoub -> failure x
  TypQC qconst -> failure x
  TCons type_ -> failure x
  TypRef type_ -> failure x
transQConst :: QConst -> Result
transQConst x = case x of
  QDef elmts -> failure x
transElmt :: Elmt -> Result
transElmt x = case x of
  NElmt id -> failure x
  NElntt id types -> failure x
transExp :: Exp -> Result
transExp x = case x of
  EThrow exp -> failure x
  ECondit exp1 exp2 exp3 -> failure x
  EPlusEq exp1 exp2 -> failure x
  EMinEq exp1 exp2 -> failure x
  EAss exp1 exp2 -> failure x
  EOr exp1 exp2 -> failure x
  EAnd exp1 exp2 -> failure x
  ENEq exp1 exp2 -> failure x
  EEq exp1 exp2 -> failure x
  EGEq exp1 exp2 -> failure x
  ELEq exp1 exp2 -> failure x
  EGt exp1 exp2 -> failure x
  ELt exp1 exp2 -> failure x
  ERShift exp1 exp2 -> failure x
  ELShift exp exps -> failure x
  EMinus exp1 exp2 -> failure x
  EPlus exp1 exp2 -> failure x
  EMod exp1 exp2 -> failure x
  EDiv exp1 exp2 -> failure x
  ETimes exp1 exp2 -> failure x
  ENegBool exp -> failure x
  EDecr exp -> failure x
  EIncr exp -> failure x
  EPointer exp -> failure x
  EPostDecr exp -> failure x
  EPostIncr exp -> failure x
  EAssPointer exp1 exp2 -> failure x
  ERefCall exp1 exp2 -> failure x
  EArray exp1 exp2 -> failure x
  ECall exp exps -> failure x
  EQConst qconst -> failure x
  ETrue -> failure x
  EFalse -> failure x
  EString strings -> failure x
  EChar char -> failure x
  EInt integer -> failure x
  EDouble double -> failure x
  ETyped exp type_ -> failure x

